=content_for :head do
  %meta{:content => "Finger Lakes Climate Fund", :property => "og:title"}
  %meta{:content => "http://fingerlakesclimatefund.org", :property => "og:url"}
  %meta{:content => "Offset your carbon locally in the finger lakes", :property => "og:description"}
.row.with-border#overview
  .large-4.medium-4.columns{:style=>'margin-bottom: 30px;'}
    %h3 How it Works
    .cycle-slideshow{"data-cycle-caption" => "#custom-caption","data-speed"=>"1200","data-cycle-caption-template" => "{{cycleTitle}}", "data-cycle-fx" => "fadeout", "data-delay" => 3000, "data-cycle-timeout" => "4000"}
      %img{"data-cycle-title" => "Take responsibility for some of your CO2 emissions from burning fossil fuels.", :src => "/assets/slide-1.png"}/
      %img{"data-cycle-title" => "Use our calculator to estimate your emissions and then purchase a carbon offset.", :src => "/assets/slide-2.png"}/
      %img{"data-cycle-title" => "Your donation helps low-income families pay for energy efficiency measures to cancel out your CO2 emissions.", :src => "/assets/slide-3.png"}/

    / empty element for caption
    #custom-caption.center

  .large-4.medium-4.columns{:style=>'margin-bottom: 30px;'}
    %h3 Recent Offset Donors
    -if @offsetter.present?
      =render @offsetter

  .large-4.medium-4.columns{:style=>'margin-bottom: 30px;'}
    %h3 Recent Grant Awardees
    =render :partial=>'awardees/awardee_digest', :locals=>{awardee: @awardee}
.row.with-border#your-impact
  .large-12.columns
    %h5 Our Impact

  .large-3.medium-3.columns.impact

    %span=number_with_delimiter(@stats.pounds)
    %label lbs C02 offset
  .large-3.medium-3.columns.impact

    %span=number_with_delimiter(@stats.pounds/20)
    %label gallons gas avoided
  .large-3.medium-3.columns.impact

    %span=number_to_currency(@stats.dollars, :precision => 0)
    %label in offsets raised
  .large-3.medium-3.columns.impact

    %span=@awardee_count
    %label grants awarded
.row.with-border#seal-the-cracks{:style=>"padding:0px;"}
  .large-8.medium-8.columns{:style=>'padding-top: 15px;'}
    %h4 Help us
    .cracks-logo=image_tag('seal-the-cracks-logo-1100.png')
    .row#cracks-impacts
      .large-6.medium-6.columns
        .cracks-text Your offsets will
      .large-6.medium-6.columns
        %ul.cracks-list
          %li Help others in need
          %li Support local green jobs
          %li Help protect the climate
          %li Strengthen our local economy
  .large-4.medium-4.columns{:style=>'min-height: 370px;'}
    #graph.chart.show-for-medium-up{"data-percent" => "#{@cracks_pct}"}

      %span
        .white We've raised
        .green $#{number_with_delimiter(@cracks_money.round)}
        .white since
        .green{:style=>'font-size: 25px'} 9/1/17

    #mobile-graph.chart.show-for-small-only{"data-percent" => "#{@cracks_pct}"}

      %span
        .white We've raised
        .green $#{number_with_delimiter(@cracks_money.round)}
        .white of our
        .green{:style=>'font-size: 25px'} $12,500
        .white goal
.row.with-border.purple-section
  .large-12.columns{:style=>'text-align:center;background-color: #8012b3'}
    %h2.heading-text Carbon Races
  .large-6.medium-6.columns{:style=>'padding:10px 10px 0 25px;'}
    %h3.purple-text Join the Race!
    %p Show the world how much your organization cares about the planet by participating in our Carbon Races.  Once you have created a team, encourage your colleagues to join you as you race against other teams to see who can offset the most carbon each week and month.
    %button.large.carbon-race Create a Team
    %button.large.carbon-race Join a Team

    %h4 Team Leaders By Tonnage
    %hr
    .row.leader{:style=>'margin: 0px; padding: 0px;'}
      -count = 1
      -@leaders.each do |t|
        =render :partial => 'teams/team_leaderboard', :locals=>{counter: count, team: t}
        -count = count + 1
      .more=link_to 'See full leaderboard', '/pages/carbon-races'
  .large-6.medium-6.columns{:style=>'padding:10px 25px 0 10px;'}
    %h3.purple-text Or, Run Solo!
    %p You can compete in the Carbon Races as an individual or single entity as well.  This is perfect for the solo entrepreneur or anybody who isn't part of a larger team but also wants to take responsibility for their carbon emissions while helping those in need.
    %button.large.carbon-race Compete as an Individual

    %h4 Individual Leaders By Tonnage
    %hr
    .row.leader#leaders{:style=>'margin: 0px; padding: 0px;'}
      -count = 1
      -@individual_leaders.each do |t|
        =render :partial => 'individuals/leaderboard', :locals=>{counter: count, team: t}
        -count = count + 1
      .more=link_to 'See full leaderboard', '/pages/carbon-races'


.row.with-border.yellow-section
  .large-12.columns{:style=>'text-align:center;background-color: #dca600;'}
    %h3.heading-text Win Prizes
  .large-6.medium-6.columns{:style=>'padding:10px 25px 0 10px;'}
    %h4.left Recently Claimed Prizes
    %hr
    =render @recent_prizes
  .large-6.medium-6.columns{:style=>'padding:10px 25px 0 10px;'}
    %h4.left Available Prizes
    %hr
    =render @prizes
%section.with-border.main-section
  .row{:style => "background-color: #fff"}
    .large-12.columns
      -if alert
        .alert-box.success.radius{"data-alert" => ""}
          =alert
          %a.close{:href => "#"} &times;
      -if notice
        .alert-box.success.radius{"data-alert" => ""}
          =notice
          %a.close{:href => "#"} &times;
  -#.row
    -#.large-12.columns{:style => "background-color: #851cb7; padding: 0px;"}
      -#.heading-text carbon races
    -#.large-12.columns{:style=>'height:300px;'}
      -#%a.twitter-share-button{"data-count" => "none", "data-hashtags" => "fingerlakes", "data-text" => "Offset your carbon locally", "data-url" => "http://fingerlakesclimatefund.org", "data-via" => "FingerLakesClimateFund", :href => "https://twitter.com/share"} Tweet
      -#.fb-like{"data-share" => "true", "data-show-faces" => "true", "data-width" => "300"}
-if user_signed_in?
  -if current_user.session_id

    :javascript
      $(document).on("ready", function() {
        $('#user-offsets').foundation('reveal', 'open');
        var button = $('#stripe');
        $('#user-offsets').append(button);
      });
:javascript

  var el = document.getElementById('graph'); // get canvas

  var options = {
      percent:  el.getAttribute('data-percent') || 25,
      size: el.getAttribute('data-size') || 220,
      lineWidth: el.getAttribute('data-line') || 20,
      rotate: el.getAttribute('data-rotate') || 0
  }

  var canvas = document.createElement('canvas');
  var span = document.createElement('span');
  span.textContent = Math.round(options.percent) + '%';

  if (typeof(G_vmlCanvasManager) !== 'undefined') {
      G_vmlCanvasManager.initElement(canvas);
  }

  var ctx = canvas.getContext('2d');
  canvas.width = canvas.height = options.size;

  el.appendChild(canvas);

  ctx.translate(options.size / 2, options.size / 2); // change center
  ctx.rotate((-1 / 2 + options.rotate / 180) * Math.PI); // rotate -90 deg

  //imd = ctx.getImageData(0, 0, 240, 240);
  var radius = (options.size - options.lineWidth) / 2;

  var drawCircle = function(color, lineWidth, percent) {
      percent = Math.min(Math.max(0, percent || 1), 1);
      ctx.beginPath();
      ctx.arc(0, 0, radius, 0, Math.PI * 2 * percent, false);
      ctx.strokeStyle = color;
          ctx.lineCap = 'round'; // butt, round or square
      ctx.lineWidth = lineWidth
      ctx.stroke();
  };

  drawCircle('#efefef', options.lineWidth, 100 / 100);
  drawCircle('#5b922f', options.lineWidth, options.percent / 100);


  var el = document.getElementById('mobile-graph'); // get canvas

  var options = {
      percent:  el.getAttribute('data-percent') || 25,
      size: el.getAttribute('data-size') || 220,
      lineWidth: el.getAttribute('data-line') || 20,
      rotate: el.getAttribute('data-rotate') || 0
  }

  var canvas = document.createElement('canvas');
  var span = document.createElement('span');
  span.textContent = Math.round(options.percent) + '%';

  if (typeof(G_vmlCanvasManager) !== 'undefined') {
      G_vmlCanvasManager.initElement(canvas);
  }

  var ctx = canvas.getContext('2d');
  canvas.width = canvas.height = options.size;

  el.appendChild(canvas);

  ctx.translate(options.size / 2, options.size / 2); // change center
  ctx.rotate((-1 / 2 + options.rotate / 180) * Math.PI); // rotate -90 deg

  //imd = ctx.getImageData(0, 0, 240, 240);
  var radius = (options.size - options.lineWidth) / 2;

  var drawCircle = function(color, lineWidth, percent) {
      percent = Math.min(Math.max(0, percent || 1), 1);
      ctx.beginPath();
      ctx.arc(0, 0, radius, 0, Math.PI * 2 * percent, false);
      ctx.strokeStyle = color;
          ctx.lineCap = 'round'; // butt, round or square
      ctx.lineWidth = lineWidth
      ctx.stroke();
  };

  drawCircle('#efefef', options.lineWidth, 100 / 100);
  drawCircle('#5b922f', options.lineWidth, options.percent / 100);
